diff -r d244a10db46e GAS/gas_update.f
--- a/GAS/gas_update.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/GAS/gas_update.f	Thu Jan 04 15:08:31 2018 -0600
@@ -12,6 +12,10 @@
       use gasmod
       use inputparmod
       use timingmod
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     HYDRO LSU
+      use hydromod
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
       implicit none
       integer,intent(in) :: it
 ************************************************************************
@@ -36,7 +40,6 @@
 !     real*8 :: hlparr(grd_nx),hlparrdd(gas_ncell)
 c-- timing
       real*8 :: t0,t1
-c
 c-- begin
       t0 = t_time()
 c
@@ -109,6 +112,8 @@
 !}}}
 c
 c
+
+
 c-- update volume
 c========================================
       i = 0
@@ -117,10 +122,20 @@
        gas_vol(i) = grd_vol(l)
       enddo !l
 c
-c
+
 c-- update density, start temperature derivative
 c===============================================
-      gas_rho = gas_mass/gas_vol
+
+        gas_rho = gas_mass/gas_vol
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     HYDRO LSU
+      if( grd_hydro_on ) then
+        call hydro_update(tsp_t, tsp_t + tsp_dt)
+        gas_mass = gas_rho * gas_vol
+      endif
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+
 c-- temperature
       gas_ur = pc_acoef*gas_temp**4
 c
diff -r d244a10db46e GRID/grid_setup.f
--- a/GRID/grid_setup.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/GRID/grid_setup.f	Thu Jan 04 15:08:31 2018 -0600
@@ -6,6 +6,10 @@
       use inputparmod
       use inputstrmod
       use physconstmod
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     HYDRO LSU
+      use hydromod
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
       implicit none
 ************************************************************************
 * Setup the grid on the computational domain
@@ -122,6 +126,27 @@
 c
 c-- zero amplification-factor energy to begin with
       grd_eamp = 0d0
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c       HYDRO LSU
+        if( grd_hydro_on ) then
+          if( grd_isvelocity ) then
+            do i = 1, grd_nx
+            do j = 1, grd_ny
+            do k = 1, grd_nz
+              l = grd_icell(i,j,k)
+              grd_vx(l) = (grd_xarr(i+1) + grd_xarr(i))*0.5d0
+              grd_vy(l) = (grd_yarr(j+1) + grd_yarr(j))*0.5d0
+              grd_vz(l) = (grd_zarr(k+1) + grd_zarr(k))*0.5d0
+            enddo
+            enddo
+            enddo
+          else
+            grd_vx = 0.0d0
+            grd_vy = 0.0d0
+            grd_vz = 0.0d0
+          endif
+        endif
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
 c
 c-- read preset temperature profiles
       inquire(file='input.temp',exist=lexist)
diff -r d244a10db46e Makefile
--- a/Makefile	Mon Feb 20 16:32:09 2017 -0700
+++ b/Makefile	Thu Jan 04 15:08:31 2018 -0600
@@ -26,14 +26,14 @@
   miscmod.o ionsmod.o ffxsmod.o bfxsmod.o bbxsmod.o \
   inputparmod.o timestepmod.o groupmod.o gridmod.o gasmod.o inputstrmod.o \
   particlemod.o timingmod.o countersmod.o manufacmod.o fluxmod.o totalsmod.o \
-  transportmod.o sourcemod.o
-
+  transportmod.o sourcemod.o hydromod.o
+  
 FILES := banner.o \
   particle_advance.o particle_advance_gamgrey.o fluxtally.o \
   dealloc_all.o read_bbxs_data.o tau_update.o
 
 LIBRARIES := TRANSPORT1/transport1.a TRANSPORT2/transport2.a TRANSPORT3/transport3.a \
-  SOURCE/source.a GAS/gas.a GRID/grid.a MISC/misc.a OUTPUT/output.a
+  SOURCE/source.a GAS/gas.a GRID/grid.a MISC/misc.a OUTPUT/output.a HYDRO/hydro.a
 SUBDIRS := $(dir $(LIBRARIES))
 SUBCLEAN = $(addsuffix .clean, $(SUBDIRS))
 
diff -r d244a10db46e dealloc_all.f
--- a/dealloc_all.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/dealloc_all.f	Thu Jan 04 15:08:31 2018 -0600
@@ -13,6 +13,10 @@
       use sourcemod
       use randommod
       use timestepmod
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     MODIFICATION BY LSU
+      use hydromod
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
       implicit none
 ************************************************************************
 * deallocate all that was used till the end of the program. Any
@@ -20,6 +24,10 @@
 * with earlier.  This helps to catch memory leaks! (drr)
 ************************************************************************
 c-- ionsmod
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     MODIFICATION BY LSU
+      call hydromod_dealloc
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
       call ions_dealloc
       call gas_dealloc
       call grid_dealloc
diff -r d244a10db46e gridmod.f
--- a/gridmod.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/gridmod.f	Thu Jan 04 15:08:31 2018 -0600
@@ -21,6 +21,14 @@
       real*8,allocatable :: grd_xarr(:)  !(nx+1), left cell edge values
       real*8,allocatable :: grd_yarr(:)  !(ny+1), left cell edge values
       real*8,allocatable :: grd_zarr(:)  !(nz+1), left cell edge values
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c        HYDRO LSU
+      logical :: grd_hydro_on = .false.
+      logical :: grd_radiation_on = .true.
+      real*8,allocatable :: grd_vx(:)
+      real*8,allocatable :: grd_vy(:)
+      real*8,allocatable :: grd_vz(:)
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
 c
 c-- maximum radial grid velocity
       real*8 :: grd_rout=0d0   !particle flux edge radius
@@ -127,6 +135,12 @@
       allocate(grd_xarr(grd_nx+1))
       allocate(grd_yarr(grd_ny+1))
       allocate(grd_zarr(grd_nz+1))
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c        HYDRO LSU
+      allocate(grd_vx(grd_ncell))
+      allocate(grd_vy(grd_ncell))
+      allocate(grd_vz(grd_ncell))
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
 c-- polar
       if(grd_igeom==1) allocate(grd_yacos(grd_ny+1))
 c
@@ -208,6 +222,12 @@
       deallocate(grd_emitprob)
 c-- ndim=4 alloc
       deallocate(grd_cap)!}}}
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c        HYDRO LSU
+      deallocate(grd_vx)
+      deallocate(grd_vy)
+      deallocate(grd_vz)
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
       end subroutine grid_dealloc
 c
       end module gridmod
diff -r d244a10db46e inputparmod.f
--- a/inputparmod.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/inputparmod.f	Thu Jan 04 15:08:31 2018 -0600
@@ -23,6 +23,13 @@
       integer :: in_grd_igeom = 0 !geometry: 1=sph, 2=cyl, 3=car, 11=1Dsph
       integer :: in_ndim(3) = [1, 1, 1]  !number of x-direction cells
       logical :: in_isvelocity = .true.  !switch underlying grid between spatial+static to velocity+expanding
+
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     HYDRO LSU
+      logical :: in_hydro_on = .true.
+      logical :: in_radiation_on = .true.
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+
 c
 c
 c-- read input structure file instead of specifying the stucture with input parameters
@@ -196,7 +203,12 @@
 !io
      & in_io_grabstdout,
      & in_io_nogriddump,in_io_dogrdtally,
-     & in_io_opacdump,in_io_pdensdump
+     & in_io_opacdump,in_io_pdensdump,
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     HYDRO LSU
+     & in_hydro_on, in_radiation_on
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+
 c
 c-- pointers
 c
@@ -717,6 +729,10 @@
       use groupmod
       use gasmod
       use gridmod
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     MODIFICATION BY LSU
+      use hydromod
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
       implicit none
       integer,intent(in) :: nmpi
 ************************************************************************
@@ -785,6 +801,11 @@
       grd_ny    = in_ndim(2)
       grd_nz    = in_ndim(3)
       grd_isvelocity = in_isvelocity
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c     MODIFICATION BY LSU
+      grd_hydro_on = in_hydro_on
+      grd_radiation_on = in_radiation_on
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
 c!}}}
       end subroutine provide_inputpars
 c
diff -r d244a10db46e mpimod_ser.f
--- a/mpimod_ser.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/mpimod_ser.f	Thu Jan 04 15:08:31 2018 -0600
@@ -71,7 +71,111 @@
       subroutine allreduce_gammaenergy
       end subroutine allreduce_gammaenergy
 c
-c
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c      HYDRO LSU
+      subroutine gather_hydro
+      use gridmod
+      use hydromod
+      use gasmod
+      use physconstmod
+      implicit none
+
+      integer :: i, j, k, l, f
+      integer :: i0, j0, k0, f0
+      real*8 :: eint
+
+      do i = hydro_bw+1, hydro_nx - hydro_bw
+      do j = hydro_bw+1, hydro_ny - hydro_bw
+      do k = hydro_bw+1, hydro_nz - hydro_bw
+         i0 = i - hydro_bw
+         j0 = j - hydro_bw
+         k0 = k - hydro_bw
+         l = grd_icell(i0, j0, k0)
+         hydro_state(i,j,k,rho_i) = gas_rho(l)
+         hydro_state(i,j,k,px_i) = grd_vx(l) * gas_rho(l)
+         hydro_state(i,j,k,py_i) = grd_vy(l) * gas_rho(l)
+         hydro_state(i,j,k,pz_i) = grd_vz(l) * gas_rho(l)
+         eint =  1.5d0*pc_kb*(1d0+gas_nelec(l))
+     &              * gas_natom(l) / gas_vol(l) * gas_temp(l)
+         hydro_state(i,j,k,tau_i) = eint**(1.0d0 / hydro_gamma)
+         if( grd_igeom .eq. 11 ) then
+           hydro_state(i,j,k,egas_i) = eint +
+     &                               0.5d0*grd_vx(l)**2 * gas_rho(l)
+         else
+           hydro_state(i,j,k,egas_i) = eint + 0.5d0*
+     &     (grd_vx(l)**2 + grd_vy(l)**2 + grd_vz(l)**2) * gas_rho(l)
+         endif
+         f = frac_i
+         do f0 = -2*gas_nchain, -1
+           hydro_state(i,j,k,f) =
+     &               gas_natom1fr(f0,l) / gas_vol(l)
+           f = f + 1
+         enddo
+         do f0 = 1, gas_nelem
+           hydro_state(i,j,k,f) =
+     &               gas_natom1fr(f0,l) / gas_vol(l)
+           f = f + 1
+         enddo
+      enddo
+      enddo
+      enddo
+
+      end subroutine gather_hydro
+
+
+      subroutine scatter_hydro
+      use gridmod
+      use hydromod
+      use gasmod
+      use physconstmod
+      use elemdatamod
+      implicit none
+
+      integer :: i, j, k, l, f
+      integer :: i0, j0, k0, f0
+      real*8 :: eint, nnuc
+
+      do i = hydro_bw+1, hydro_nx - hydro_bw
+      do j = hydro_bw+1, hydro_ny - hydro_bw
+      do k = hydro_bw+1, hydro_nz - hydro_bw
+         i0 = i - hydro_bw
+         j0 = j - hydro_bw
+         k0 = k - hydro_bw
+         l = grd_icell(i0, j0, k0)
+
+         gas_rho(l) = hydro_state(i,j,k,rho_i)
+         grd_vx(l) = hydro_state(i,j,k,px_i) / gas_rho(l)
+         grd_vy(l) = hydro_state(i,j,k,py_i) / gas_rho(l)
+         grd_vz(l) = hydro_state(i,j,k,pz_i) / gas_rho(l)
+         eint = hydro_state(i,j,k,tau_i)**(hydro_gamma)
+
+         f = frac_i
+         do f0 = -2*gas_nchain, -1
+           gas_natom1fr(f0,l) = hydro_state(i,j,k,f) * gas_vol(l)
+           f = f + 1
+         enddo
+         do f0 = 1, gas_nelem
+           gas_natom1fr(f0,l) = hydro_state(i,j,k,f) * gas_vol(l)
+           f = f + 1
+         enddo
+         gas_natom(l) = sum(gas_natom1fr(1:gas_nelem,l))
+         gas_nelec(l) = 0.0d0
+         nnuc = 0.0d0
+         do f = 1, gas_nelem
+           gas_nelec(l) = gas_nelec(l) + f * gas_natom1fr(f,l)
+           nnuc = nnuc + elem_data(f)%m * gas_natom1fr(f,l)
+         enddo
+         gas_ye(l) = gas_nelec(l) / nnuc
+         gas_nelec(l) = gas_nelec(l) / gas_natom(l)
+         gas_bcoef(l) = 1.5d0*pc_kb*(1d0+gas_nelec(l))
+     &              * gas_natom(l) / gas_vol(l)
+         gas_temp(l) =    eint / gas_bcoef(l)
+      enddo
+      enddo
+      enddo
+
+      end subroutine scatter_hydro
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
       subroutine bcast_nonpermanent
       use gridmod
       use gasmod
diff -r d244a10db46e supernu.f90
--- a/supernu.f90	Mon Feb 20 16:32:09 2017 -0700
+++ b/supernu.f90	Thu Jan 04 15:08:31 2018 -0600
@@ -24,7 +24,10 @@
   use ffxsmod, only:ffxs_read_data
   use timingmod
   use countersmod
-
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+!     MODIFICATION BY LSU
+  use hydromod
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
   implicit none
 !***********************************************************************
 ! TODO and wishlist:
@@ -94,6 +97,7 @@
 !--
 !-- setup remaining modules
 !==========================
+
   call timestepmod_init
 
 !-- wlgrid (before grid setup)
@@ -103,6 +107,13 @@
 !-- setup spatial grid
   call gridmod_init(lmpi0,grp_ng,str_nc,str_lvoid,icell1,ncell)
   call grid_setup
+
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+!     MODIFICATION BY LSU
+  call hydromod_init
+  call hydro_setup
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+
 !-- setup gas
   call gasmod_init(lmpi0,icell1,ncell,grp_ng)
   call gas_setup
@@ -163,6 +174,11 @@
      call grid_update(tsp_t)
      call gas_update(it)
 
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+!     MODIFICATION BY LSU
+     if( in_radiation_on ) then
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+
 !-- source energy: gamma and material
      call sourceenergy
 
@@ -237,6 +253,11 @@
      call temperature_update
      call reduce_gastemp !MPI  !for output
 
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+!     MODIFICATION BY LSU
+     endif !( in_radiation_on ) then
+!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+
 !-- output
      if(lmpi0) then
 !-- total energy startup values and energy conservation
@@ -261,6 +282,7 @@
         endif
      endif !impi
 
+
 !-- write timestep timing to file
      call timing_cycle(impi,it<=0)
      call counters_cycle(impi,it<=0)
